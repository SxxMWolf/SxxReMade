plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.5'
	// ⚠️ Kotlin 안 쓰면 제거
	// id 'org.jetbrains.kotlin.jvm'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'       // MVC (Tomcat)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'   // WebClient/Reactive
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // ✅ DTO 검증(권장)
	// implementation 'org.springframework.boot:spring-boot-starter-actuator' // 운영 모니터링(선택)

	// DB
	runtimeOnly 'org.postgresql:postgresql:42.6.0' // ✅ runtimeOnly 권장(implementation도 무방)

	// Google Cloud
	implementation 'com.google.cloud:google-cloud-vision:3.36.0'  // ✅ 업그레이드
	implementation 'com.google.cloud:google-cloud-speech:4.2.0'

	// AWS SDK v2
	implementation platform('software.amazon.awssdk:bom:2.25.11')
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:sts'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Jackson (starter-web에 들어있어서 생략 가능)
	// implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// @ConfigurationProperties 자동완성/메타(선택)
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Dev
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ⚠️ Kotlin 안 쓰면 제거
	// implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	environment "OPENAI_API_KEY", System.getenv("OPENAI_API_KEY")
}

// (선택) 컴파일 옵션 깔끔하게
tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'
}
